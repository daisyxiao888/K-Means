#图片切割为多个部分，需要用到skimage包
import pandas as pd
import numpy as np
from PIL import Image
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
from skimage import color

#定义加载图片的函数，返回值为图片的像素值矩阵及图片宽度、高度
def load_img(filepath):
    data = []
    img = Image.open(filepath)
    width,height = img.size
    for x in range(width):
        for y in range(height):
            c1,c2,c3 = img.getpixel((x,y))  #获取像素值
            data.append([c1,c2,c3])
    mm = StandardScaler()
    data = mm.fit_transform(data)
    return np.mat(data),width,height

img,width,height = load_img('C:/Users/mi/Documents/python/data analysis/kmeans-master/weixin.jpg')

kmeans = KMeans(n_clusters = 10)
kmeans.fit(img)
label = kmeans.predict(img)
label = label.reshape([width,height])
# 将聚类标识矩阵转化为不同颜色的矩阵
#label2rgb 函数将 label 分类标识转化为颜色数值，因为我们的颜色值范围是 [0,255]，所以还需要乘以 255 进行转化，
#最后再转化为 np.uint8 类型。unit8 类型代表无符号整数，范围是 0-255 之间。
label_color = (color.label2rgb(label)*255).astype(np.uint8) 
label_color = label_color.transpose(1,0,2) #将0轴和1轴交换
images = Image.fromarray(label_color)  #通过矩阵生成图片
images.save('weixin_mark_color.jpg')
