import pandas as pd
import numpy as np
from PIL import Image
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler

#定义加载图片的函数，返回值为图片的像素值矩阵及图片宽度、高度
def load_img(filepath):
    data = []
    img = Image.open(filepath)
    width,height = img.size
    for x in range(width):
        for y in range(height):
            c1,c2,c3 = img.getpixel((x,y))  #获取像素值
            data.append([c1,c2,c3])
    mm = MinMaxScaler()
    data = mm.fit_transform(data)
    return np.mat(data),width,height

img,width,height = load_img('C:/Users/mi/Documents/python/data analysis/kmeans-master/weixin.jpg')

#聚类
kmeans = KMeans(n_clusters = 2)
kmeans.fit(img)
#聚类结果为包含0、1的一维向量
label = kmeans.predict(img)
#将聚类结果转化为跟图像尺寸一样的矩阵
labels = label.reshape([width,height])
#创建新图像pic_mark，并根据聚类结果设置不同的灰度值
pic_mark =Image.new("L",(width,height)) #L表示创建的新图片的模式为灰度
for x in range(width):
    for y in range(height):
        # 根据类别设置图像灰度, 类别 0 灰度值为 255，类别1灰度值为127
        pic_mark.putpixel((x,y),int(256/(labels[x][y]+1))-1)
pic_mark.save('weixin_mark.jpg','JPEG')
